[{
  "id": "564bbfe3e4b0869c782ee3fa",
  "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/subscriptions/564bbfe3e4b0869c782ee3fa",
  "organization": {
    "id": "564b48a9e4b0869c782edc24",
    "name": "apim",
    "title": "Climb On"
  },
  "catalog": {
    "id": "564b48aae4b0869c782edc2b",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b",
    "name": "sb",
    "title": "Sandbox",
    "sandbox": true,
    "default": false
  },
  "active": true,
  "application": {
    "id": "564b7d14e4b0869c782ee055",
    "title": "test app",
    "enabled": false,
    "state": "ACTIVE",
    "description": "",
    "oauth-redirection-uri": "https://localhost",
    "app-credentials": [{
      "id": "564b7d14e4b0869c782ee056",
      "client-id": "fb82cb59-ba95-4c34-8612-e63697d7b845",
      "client-secret": "Bk7lTzdlvMh+P22zHG2IIT/sJhKTgiaiG2OHliFHfkE="
    }],
    "test-app": false
  },
  "developer-organization": {
    "id": "564b7c28e4b0869c782edfc1",
    "name": "co1",
    "title": "CO1"
  },
  "plan-registration": {
    "id": "apim:1.0.0:trial",
    "product": {
      "id": "564b7b44e4b0869c782ede0b",
      "state": "published",
      "visibility": {
        "view": {
          "enabled": true,
          "type": "public",
          "tags": [],
          "orgs": []
        },
        "subscribe": {
          "enabled": true,
          "type": "authenticated",
          "tags": [],
          "orgs": []
        }
      },
      "document": {
        "product": "1.0.0",
        "info": {
          "name": "apim",
          "version": "1.0.0",
          "title": "ClimbOn",
          "contact": {
            "name": "George O Jungle",
            "email": "george.o.jungle@apim.com",
            "url": "http://www.apim.com"
          },
          "license": {
            "name": "Free for all climbers",
            "url": "http://www.apim.com/user-agreement"
          },
          "termsOfService": "Thy shalt not weigh more than thy fridge."
        },
        "visibility": {
          "view": {
            "enabled": true,
            "type": "public",
            "tags": [],
            "orgs": []
          },
          "subscribe": {
            "enabled": true,
            "type": "custom",
            "tags": ["tag1", "tag2"],
            "orgs": ["Consumer-Org-1", "Consumer-Org-2"]
          }
        },
        "apis":
          {
          "ascents": {"name": "ascents:1.0.0"},
          "forecasts": {"name": "forecasts:1.0.0"},
          "routes": {"name": "routes:1.0.0"}
          },
        "plans": {
          "trial": {
            "title": "Trial Climb On",
            "description": "blah blah",
            "approval": false,
            "rate-limit": {
              "hard-limit": true,
              "value": "60/hour"
            },
            "apis":
              {
              "ascents": {}
              }
          },
          "silver": {
            "title": "Silver Climb On",
            "description": "blah blah",
            "approval": true,
            "rate-limit": {
              "hard-limit": false,
              "value": "100/min"
            },
            "apis":
              {
              "ascents": {},
              "forecasts": {}
              }
          },
          "gold": {
            "title": "Gold Climb On",
            "description": "blah blah",
            "approval": true,
            "rate-limit": {
              "hard-limit": false,
              "value": "1000/min"
            },
            "apis":
              {
              "ascents": {},
              "forecasts": {},
              "routes": {}
              }
          }
        }
      }
    },
    "plan": {
      "name": "trial",
      "title": "Trial Climb On"
    },
    "apis": [
      {
        "id": "564b7b44e4b0869c782eddd2",
        "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/564b7b44e4b0869c782eddd2",
        "state": "running",
        "organization": {
          "id": "564b48a9e4b0869c782edc24",
          "name": "apim",
          "title": "Climb On"
        },
        "catalog": {
          "id": "564b48aae4b0869c782edc2b",
          "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b",
          "name": "sb",
          "title": "Sandbox",
          "sandbox": true,
          "default": false
        },
        "document": {
          "swagger": "2.0",
          "info": {
            "title": "ascents",
            "version": "1.0.0",
            "description": "The /v1 set of Ascent APIs",
            "termsOfService": "The Terms of Service for the API are ...",
            "contact": {
              "name": "Joe API Developer",
              "url": "http://developer.acme.com/contacturl",
              "email": "joedeveloper@someemailservice.com"
            },
            "license": {
              "name": "License Name Goes Here...",
              "url": "http://developer.acme.com/licenseurl"
            },
            "x-ibm-name": "ascents"
          },
          "host": "localhost:3000",
          "basePath": "/v1",
          "paths": {
            "/ascents": {
              "get": {
                "tags": ["Ascent"],
                "summary": "List Ascent",
                "description": "List Ascent",
                "operationId": "list",
                "parameters": [{
                  "description": "What element to start the list at, default is 0",
                  "name": "offset",
                  "type": "string",
                  "required": false,
                  "in": "query"
                }, {
                  "description": "Total number of items to return, default is 10",
                  "name": "limit",
                  "type": "string",
                  "required": false,
                  "in": "query"
                }],
                "responses": {
                  "200": {
                    "description": "Success",
                    "schema": {
                      "$ref": "#/definitions/AscentList"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              },
              "post": {
                "tags": ["Ascent"],
                "summary": "Create a Ascent",
                "description": "Create a Ascent",
                "parameters": [{
                  "schema": {
                    "$ref": "#/definitions/AscentCreate"
                  },
                  "description": "Ascent to create",
                  "name": "payload",
                  "required": true,
                  "in": "body"
                }],
                "responses": {
                  "201": {
                    "description": "Successful create",
                    "schema": {
                      "$ref": "#/definitions/Ascent"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              }
            },
            "/ascents/{ascent}": {
              "get": {
                "tags": ["Ascent"],
                "summary": "Retrieve the Ascent",
                "description": "Retrieve the Ascent",
                "parameters": [{
                  "description": "Ascent id",
                  "name": "ascent",
                  "type": "string",
                  "required": true,
                  "in": "path"
                }, {
                  "description": "Return a subset of the fields",
                  "name": "fields",
                  "type": "string",
                  "required": false,
                  "in": "query"
                }],
                "responses": {
                  "200": {
                    "description": "Success",
                    "schema": {
                      "$ref": "#/definitions/Ascent"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              },
              "put": {
                "tags": ["Ascent"],
                "summary": "Update Ascent",
                "description": "Update Ascent",
                "parameters": [{
                  "description": "Ascent id",
                  "name": "ascent",
                  "type": "string",
                  "required": true,
                  "in": "path"
                }, {
                  "schema": {
                    "$ref": "#/definitions/AscentUpdate"
                  },
                  "description": "Ascent to update",
                  "name": "payload",
                  "required": true,
                  "in": "body"
                }],
                "responses": {
                  "200": {
                    "description": "Success",
                    "schema": {
                      "$ref": "#/definitions/Ascent"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              },
              "delete": {
                "tags": ["Ascent"],
                "summary": "Delete the Ascent",
                "description": "Delete the Ascent",
                "operationId": "del",
                "parameters": [{
                  "description": "Ascent id",
                  "name": "ascent",
                  "type": "string",
                  "required": true,
                  "in": "path"
                }],
                "responses": {
                  "204": {
                    "description": "Successful delete"
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              }
            }
          },
          "definitions": {
            "Ascent": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "route": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                }
              }
            },
            "AscentCreate": {
              "type": "object",
              "additionalProperties": false,
              "required": ["route"],
              "properties": {
                "route": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                }
              }
            },
            "AscentUpdate": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "route": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                }
              }
            },
            "AscentList": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "total_results": {
                  "type": "integer"
                },
                "results": {
                  "type": "array",
                  "items": [{
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "route": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      }
                    }
                  }]
                }
              }
            },
            "Error": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "status": {
                  "type": "integer"
                },
                "message": {
                  "type": ["string", "array"]
                }
              }
            }
          },
          "schemes": ["http"],
          "securityDefinitions": {
            "oauthImplicit": {
              "type": "oauth2",
              "authorizationUrl": "http://swagger.io/api/oauth/dialog",
              "flow": "implicit",
              "scopes": {
                "scope1": "blah description",
                "scope2": "blah blah description"
              },
              "x-ibm-oauth2": {
                "authentication": ["basicAuth", "form"],
                "authenticationForm": {
                  "url": "https://somehost.com/authenticate",
                  "tlsClient": "Some SSL Profile Configuration Name"
                },
                "authenticationRegistry": "Some Registry Configuration Name",
                "authenticationUrl": {
                  "url": "https://somehost.com/authenticate",
                  "tlsClient": "Some SSL Profile Configuration Name"
                },
                "authorization": "form",
                "authorizationForm": {
                  "url": "https://somehost.com/authorization",
                  "tlsClient": "Some SSL Profile Configuration Name"
                },
                "refreshToken": false,
                "revocationUrl": {
                  "url": "https://somehost.com/revoke",
                  "tlsClient": "Some SSL Profile Configuration Name"
                }
              }
            }
          },
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "x-ibm-configuration": {
            "phase": "realized",
            "testable": true,
            "enforced": true,
            "cors": {
              "enabled": true
            }
          }
        }
      }
    ]
  }
}, {
  "id": "564bc01be4b0869c782ee45c",
  "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/subscriptions/564bc01be4b0869c782ee45c",
  "organization": {
    "id": "564b48a9e4b0869c782edc24",
    "name": "apim",
    "title": "Climb On"
  },
  "catalog": {
    "id": "564b48aae4b0869c782edc2b",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b",
    "name": "sb",
    "title": "Sandbox",
    "sandbox": true,
    "default": false
  },
  "active": true,
  "application": {
    "id": "564b7d37e4b0869c782ee083",
    "title": "Prod App",
    "enabled": false,
    "state": "ACTIVE",
    "description": "",
    "oauth-redirection-uri": "https://localhost",
    "app-credentials": [{
      "id": "564b7d37e4b0869c782ee084",
      "client-id": "612caa59-9649-491f-99b7-d9a941c4bd2e",
      "client-secret": "k5YeP1pA1l+QBRq8fdtTDx7+qC/Dim7mSZyS1yRo8ww="
    }],
    "test-app": false
  },
  "developer-organization": {
    "id": "564b7c28e4b0869c782edfc1",
    "name": "co1",
    "title": "CO1"
  },
  "plan-registration": {
    "id": "apim:1.0.0:gold",
    "product": {
      "id": "564b7b44e4b0869c782ede0b",
      "state": "published",
      "visibility": {
        "view": {
          "enabled": true,
          "type": "public",
          "tags": [],
          "orgs": []
        },
        "subscribe": {
          "enabled": true,
          "type": "authenticated",
          "tags": [],
          "orgs": []
        }
      },
      "document": {
        "product": "1.0.0",
        "info": {
          "name": "apim",
          "version": "1.0.0",
          "title": "ClimbOn",
          "contact": {
            "name": "George O Jungle",
            "email": "george.o.jungle@apim.com",
            "url": "http://www.apim.com"
          },
          "license": {
            "name": "Free for all climbers",
            "url": "http://www.apim.com/user-agreement"
          },
          "termsOfService": "Thy shalt not weigh more than thy fridge."
        },
        "visibility": {
          "view": {
            "enabled": true,
            "type": "public",
            "tags": [],
            "orgs": []
          },
          "subscribe": {
            "enabled": true,
            "type": "custom",
            "tags": ["tag1", "tag2"],
            "orgs": ["Consumer-Org-1", "Consumer-Org-2"]
          }
        },
        "apis":
          {
          "ascents": {"name": "ascents:1.0.0"},
          "forecasts": {"name": "forecasts:1.0.0"},
          "routes": {"name": "routes:1.0.0"}
          },
        "plans": {
          "trial": {
            "title": "Trial Climb On",
            "description": "blah blah",
            "approval": false,
            "rate-limit": {
              "hard-limit": true,
              "value": "60/hour"
            },
          "apis":
            {
            "ascents": {}
            }
          },
          "silver": {
            "title": "Silver Climb On",
            "description": "blah blah",
            "approval": true,
            "rate-limit": {
              "hard-limit": false,
              "value": "100/min"
            },
          "apis":
            {
            "ascents": {},
            "forecasts": {}
            }
          },
          "gold": {
            "title": "Gold Climb On",
            "description": "blah blah",
            "approval": true,
            "rate-limit": {
              "hard-limit": false,
              "value": "1000/min"
            },
          "apis":
            {
            "ascents": {},
            "forecasts": {},
            "routes": {}
            }
          }
        }
      }
    },
    "plan": {
      "name": "gold",
      "title": "Gold Climb On"
    },
    "apis": [
      {
        "id": "564b7b44e4b0869c782eddd2",
        "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/564b7b44e4b0869c782eddd2",
        "state": "running",
        "organization": {
          "id": "564b48a9e4b0869c782edc24",
          "name": "apim",
          "title": "Climb On"
        },
        "catalog": {
          "id": "564b48aae4b0869c782edc2b",
          "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b",
          "name": "sb",
          "title": "Sandbox",
          "sandbox": true,
          "default": false
        },
        "document": {
          "swagger": "2.0",
          "info": {
            "title": "ascents",
            "version": "1.0.0",
            "description": "The /v1 set of Ascent APIs",
            "termsOfService": "The Terms of Service for the API are ...",
            "contact": {
              "name": "Joe API Developer",
              "url": "http://developer.acme.com/contacturl",
              "email": "joedeveloper@someemailservice.com"
            },
            "license": {
              "name": "License Name Goes Here...",
              "url": "http://developer.acme.com/licenseurl"
            },
            "x-ibm-name": "ascents"
          },
          "host": "localhost:3000",
          "basePath": "/v1",
          "paths": {
            "/ascents": {
              "get": {
                "tags": ["Ascent"],
                "summary": "List Ascent",
                "description": "List Ascent",
                "operationId": "list",
                "parameters": [{
                  "description": "What element to start the list at, default is 0",
                  "name": "offset",
                  "type": "string",
                  "required": false,
                  "in": "query"
                }, {
                  "description": "Total number of items to return, default is 10",
                  "name": "limit",
                  "type": "string",
                  "required": false,
                  "in": "query"
                }],
                "responses": {
                  "200": {
                    "description": "Success",
                    "schema": {
                      "$ref": "#/definitions/AscentList"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              },
              "post": {
                "tags": ["Ascent"],
                "summary": "Create a Ascent",
                "description": "Create a Ascent",
                "parameters": [{
                  "schema": {
                    "$ref": "#/definitions/AscentCreate"
                  },
                  "description": "Ascent to create",
                  "name": "payload",
                  "required": true,
                  "in": "body"
                }],
                "responses": {
                  "201": {
                    "description": "Successful create",
                    "schema": {
                      "$ref": "#/definitions/Ascent"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              }
            },
            "/ascents/{ascent}": {
              "get": {
                "tags": ["Ascent"],
                "summary": "Retrieve the Ascent",
                "description": "Retrieve the Ascent",
                "parameters": [{
                  "description": "Ascent id",
                  "name": "ascent",
                  "type": "string",
                  "required": true,
                  "in": "path"
                }, {
                  "description": "Return a subset of the fields",
                  "name": "fields",
                  "type": "string",
                  "required": false,
                  "in": "query"
                }],
                "responses": {
                  "200": {
                    "description": "Success",
                    "schema": {
                      "$ref": "#/definitions/Ascent"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              },
              "put": {
                "tags": ["Ascent"],
                "summary": "Update Ascent",
                "description": "Update Ascent",
                "parameters": [{
                  "description": "Ascent id",
                  "name": "ascent",
                  "type": "string",
                  "required": true,
                  "in": "path"
                }, {
                  "schema": {
                    "$ref": "#/definitions/AscentUpdate"
                  },
                  "description": "Ascent to update",
                  "name": "payload",
                  "required": true,
                  "in": "body"
                }],
                "responses": {
                  "200": {
                    "description": "Success",
                    "schema": {
                      "$ref": "#/definitions/Ascent"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              },
              "delete": {
                "tags": ["Ascent"],
                "summary": "Delete the Ascent",
                "description": "Delete the Ascent",
                "operationId": "del",
                "parameters": [{
                  "description": "Ascent id",
                  "name": "ascent",
                  "type": "string",
                  "required": true,
                  "in": "path"
                }],
                "responses": {
                  "204": {
                    "description": "Successful delete"
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              }
            }
          },
          "definitions": {
            "Ascent": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "route": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                }
              }
            },
            "AscentCreate": {
              "type": "object",
              "additionalProperties": false,
              "required": ["route"],
              "properties": {
                "route": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                }
              }
            },
            "AscentUpdate": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "route": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                }
              }
            },
            "AscentList": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "total_results": {
                  "type": "integer"
                },
                "results": {
                  "type": "array",
                  "items": [{
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "route": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      }
                    }
                  }]
                }
              }
            },
            "Error": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "status": {
                  "type": "integer"
                },
                "message": {
                  "type": ["string", "array"]
                }
              }
            }
          },
          "schemes": ["http"],
          "securityDefinitions": {
            "oauthImplicit": {
              "type": "oauth2",
              "authorizationUrl": "http://swagger.io/api/oauth/dialog",
              "flow": "implicit",
              "scopes": {
                "scope1": "blah description",
                "scope2": "blah blah description"
              },
              "x-ibm-oauth2": {
                "authentication": ["basicAuth", "form"],
                "authenticationForm": {
                  "url": "https://somehost.com/authenticate",
                  "tlsClient": "Some SSL Profile Configuration Name"
                },
                "authenticationRegistry": "Some Registry Configuration Name",
                "authenticationUrl": {
                  "url": "https://somehost.com/authenticate",
                  "tlsClient": "Some SSL Profile Configuration Name"
                },
                "authorization": "form",
                "authorizationForm": {
                  "url": "https://somehost.com/authorization",
                  "tlsClient": "Some SSL Profile Configuration Name"
                },
                "refreshToken": false,
                "revocationUrl": {
                  "url": "https://somehost.com/revoke",
                  "tlsClient": "Some SSL Profile Configuration Name"
                }
              }
            }
          },
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "x-ibm-configuration": {
            "phase": "realized",
            "testable": true,
            "enforced": true,
            "cors": {
              "enabled": true
            }
          }
        }
      },
    {
      "id": "564b7b44e4b0869c782eddd5",
      "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/564b7b44e4b0869c782eddd5",
      "state": "running",
      "organization": {
        "id": "564b48a9e4b0869c782edc24",
        "name": "apim",
        "title": "Climb On"
      },
      "catalog": {
        "id": "564b48aae4b0869c782edc2b",
        "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b",
        "name": "sb",
        "title": "Sandbox",
        "sandbox": true,
        "default": false
      },
      "document": {
        "swagger": "2.0",
        "info": {
          "title": "forecasts",
          "version": "1.0.0",
          "description": "The /v1 set of Forecast APIs",
          "termsOfService": "The Terms of Service for the API are ...",
          "contact": {
            "name": "Joe API Developer",
            "url": "http://developer.acme.com/contacturl",
            "email": "joedeveloper@someemailservice.com"
          },
          "license": {
            "name": "License Name Goes Here...",
            "url": "http://developer.acme.com/licenseurl"
          },
          "x-ibm-name": "forecasts"
        },
        "host": "localhost:3000",
        "basePath": "/v1",
        "paths": {
          "/forecasts/{forecast}": {
            "get": {
              "tags": ["Forecast"],
              "summary": "Retrieve the Forecast",
              "description": "Retrieve the Forecast",
              "parameters": [{
                "description": "Forecast id",
                "name": "forecast",
                "type": "string",
                "required": true,
                "in": "path"
              }, {
                "description": "Return a subset of the fields",
                "name": "fields",
                "type": "string",
                "required": false,
                "in": "query"
              }],
              "responses": {
                "200": {
                  "description": "Success",
                  "schema": {
                    "$ref": "#/definitions/Forecast"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "put": {
              "tags": ["Forecast"],
              "summary": "Update Forecast",
              "description": "Update Forecast",
              "parameters": [{
                "description": "Forecast id",
                "name": "forecast",
                "type": "string",
                "required": true,
                "in": "path"
              }, {
                "schema": {
                  "$ref": "#/definitions/ForecastUpdate"
                },
                "description": "Forecast to update",
                "name": "payload",
                "required": true,
                "in": "body"
              }],
              "responses": {
                "200": {
                  "description": "Success",
                  "schema": {
                    "$ref": "#/definitions/Forecast"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "delete": {
              "tags": ["Forecast"],
              "summary": "Delete the Forecast",
              "description": "Delete the Forecast",
              "operationId": "del",
              "parameters": [{
                "description": "Forecast id",
                "name": "forecast",
                "type": "string",
                "required": true,
                "in": "path"
              }],
              "responses": {
                "204": {
                  "description": "Successful delete"
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            }
          },
          "/forecasts": {
            "get": {
              "tags": ["Forecast"],
              "summary": "List Forecast",
              "description": "List Forecast",
              "operationId": "list",
              "parameters": [{
                "description": "What element to start the list at, default is 0",
                "name": "offset",
                "type": "string",
                "required": false,
                "in": "query"
              }, {
                "description": "Total number of items to return, default is 10",
                "name": "limit",
                "type": "string",
                "required": false,
                "in": "query"
              }],
              "responses": {
                "200": {
                  "description": "Success",
                  "schema": {
                    "$ref": "#/definitions/ForecastList"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "post": {
              "tags": ["Forecast"],
              "summary": "Create a Forecast",
              "description": "Create a Forecast",
              "parameters": [{
                "schema": {
                  "$ref": "#/definitions/ForecastCreate"
                },
                "description": "Forecast to create",
                "name": "payload",
                "required": true,
                "in": "body"
              }],
              "responses": {
                "201": {
                  "description": "Successful create",
                  "schema": {
                    "$ref": "#/definitions/Forecast"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            }
          }
        },
        "definitions": {
          "Forecast": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "conditions": {
                "type": "string"
              }
            }
          },
          "ForecastCreate": {
            "type": "object",
            "additionalProperties": false,
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string"
              },
              "conditions": {
                "type": "string"
              }
            }
          },
          "ForecastUpdate": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "conditions": {
                "type": "string"
              }
            }
          },
          "ForecastList": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "total_results": {
                "type": "integer"
              },
              "results": {
                "type": "array",
                "items": [{
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "conditions": {
                      "type": "string"
                    }
                  }
                }]
              }
            }
          },
          "Error": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "status": {
                "type": "integer"
              },
              "message": {
                "type": ["string", "array"]
              }
            }
          }
        },
        "schemes": ["http"],
        "securityDefinitions": {
          "apikeyHeader": {
            "type": "apiKey",
            "in": "header",
            "name": "client_id"
          },
          "apikeyQueryParameter": {
            "type": "apiKey",
            "in": "query",
            "name": "client_id"
          }
        },
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-ibm-configuration": {
          "phase": "realized",
          "testable": true,
          "enforced": true,
          "cors": {
            "enabled": true
          }
        }
      }
    },
    {
      "id": "564b7b44e4b0869c782ede0a",
      "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/564b7b44e4b0869c782ede0a",
      "state": "running",
      "organization": {
        "id": "564b48a9e4b0869c782edc24",
        "name": "apim",
        "title": "Climb On"
      },
      "catalog": {
        "id": "564b48aae4b0869c782edc2b",
        "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b",
        "name": "sb",
        "title": "Sandbox",
        "sandbox": true,
        "default": false
      },
      "document": {
        "swagger": "2.0",
        "info": {
          "x-ibm-name": "routes",
          "version": "1.0.0",
          "title": "routes",
          "description": "The /v1 set of Routes APIs",
          "termsOfService": "The Terms of Service for the API are ...",
          "contact": {
            "name": "Joe API Developer",
            "url": "http://developer.acme.com/contacturl",
            "email": "joedeveloper@someemailservice.com"
          },
          "license": {
            "name": "License Name Goes Here...",
            "url": "http://developer.acme.com/licenseurl"
          }
        },
        "basePath": "/v1",
        "paths": {
          "/routes/update": {
            "post": {
              "tags": ["routes"],
              "summary": "Update instances of the model matched by where from the data source.",
              "description": "",
              "operationId": "routes.updateAll",
              "parameters": [{
                "description": "Criteria to match model instances",
                "name": "where",
                "format": "JSON",
                "type": "string",
                "required": false,
                "in": "query"
              }, {
                "schema": {
                  "$ref": "#/definitions/routes"
                },
                "description": "An object of model property name/value pairs",
                "name": "data",
                "required": false,
                "in": "body"
              }],
              "responses": {
                "204": {
                  "description": "Request was successful"
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            }
          },
          "/routes/{id}": {
            "get": {
              "tags": ["routes"],
              "summary": "Find a model instance by id from the data source.",
              "description": "",
              "operationId": "routes.findById",
              "parameters": [{
                "description": "Model id",
                "name": "id",
                "format": "JSON",
                "type": "string",
                "required": true,
                "in": "path"
              }, {
                "description": "Filter defining fields and include",
                "name": "filter",
                "format": "JSON",
                "type": "string",
                "required": false,
                "in": "query"
              }],
              "responses": {
                "200": {
                  "description": "Request was successful",
                  "schema": {
                    "$ref": "#/definitions/routes"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "put": {
              "tags": ["routes"],
              "summary": "Update attributes for a model instance and persist it into the data source.",
              "description": "",
              "operationId": "routes.prototype.updateAttributes",
              "parameters": [{
                "schema": {
                  "$ref": "#/definitions/routes"
                },
                "description": "An object of model property name/value pairs",
                "name": "data",
                "required": false,
                "in": "body"
              }, {
                "description": "PersistedModel id",
                "name": "id",
                "format": "JSON",
                "type": "string",
                "required": true,
                "in": "path"
              }],
              "responses": {
                "200": {
                  "description": "Request was successful",
                  "schema": {
                    "$ref": "#/definitions/routes"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "delete": {
              "tags": ["routes"],
              "summary": "Delete a model instance by id from the data source.",
              "description": "",
              "operationId": "routes.deleteById",
              "parameters": [{
                "description": "Model id",
                "name": "id",
                "format": "JSON",
                "type": "string",
                "required": true,
                "in": "path"
              }],
              "responses": {
                "204": {
                  "description": "Request was successful"
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "head": {
              "tags": ["routes"],
              "summary": "Check whether a model instance exists in the data source.",
              "description": "",
              "operationId": "routes.id.exists",
              "parameters": [{
                "description": "Model id",
                "name": "id",
                "format": "JSON",
                "type": "string",
                "required": true,
                "in": "path"
              }],
              "responses": {
                "200": {
                  "description": "Request was successful",
                  "schema": {
                    "type": "object"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            }
          },
          "/routes/count": {
            "get": {
              "tags": ["routes"],
              "summary": "Count instances of the model matched by where from the data source.",
              "description": "",
              "operationId": "routes.count",
              "parameters": [{
                "description": "Criteria to match model instances",
                "name": "where",
                "format": "JSON",
                "type": "string",
                "required": false,
                "in": "query"
              }],
              "responses": {
                "200": {
                  "description": "Request was successful",
                  "schema": {
                    "type": "object"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            }
          },
          "/routes/change-stream": {
            "get": {
              "tags": ["routes"],
              "summary": "Create a change stream.",
              "description": "",
              "operationId": "routes.get.createChangeStream",
              "parameters": [{
                "name": "options",
                "format": "JSON",
                "type": "string",
                "required": false,
                "in": "query"
              }],
              "responses": {
                "200": {
                  "description": "Request was successful",
                  "schema": {
                    "type": "object"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "post": {
              "tags": ["routes"],
              "summary": "Create a change stream.",
              "description": "",
              "operationId": "routes.post.createChangeStream",
              "responses": {
                "200": {
                  "description": "Request was successful",
                  "schema": {
                    "type": "object"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            }
          },
          "/routes/{id}/exists": {
            "get": {
              "tags": ["routes"],
              "summary": "Check whether a model instance exists in the data source.",
              "description": "",
              "operationId": "routes.exists",
              "parameters": [{
                "description": "Model id",
                "name": "id",
                "format": "JSON",
                "type": "string",
                "required": true,
                "in": "path"
              }],
              "responses": {
                "200": {
                  "description": "Request was successful",
                  "schema": {
                    "type": "object"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            }
          },
          "/routes": {
            "get": {
              "tags": ["routes"],
              "summary": "Find all instances of the model matched by filter from the data source.",
              "description": "",
              "operationId": "routes.find",
              "parameters": [{
                "description": "Filter defining fields, where, include, order, offset, and limit",
                "name": "filter",
                "format": "JSON",
                "type": "string",
                "required": false,
                "in": "query"
              }],
              "responses": {
                "200": {
                  "description": "Request was successful",
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/routes"
                    }
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "put": {
              "tags": ["routes"],
              "summary": "Update an existing model instance or insert a new one into the data source.",
              "description": "",
              "operationId": "routes.upsert",
              "parameters": [{
                "schema": {
                  "$ref": "#/definitions/routes"
                },
                "description": "Model instance data",
                "name": "data",
                "required": false,
                "in": "body"
              }],
              "responses": {
                "200": {
                  "description": "Request was successful",
                  "schema": {
                    "$ref": "#/definitions/routes"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "post": {
              "tags": ["routes"],
              "summary": "Create a new instance of the model and persist it into the data source.",
              "description": "",
              "operationId": "routes.create",
              "parameters": [{
                "schema": {
                  "$ref": "#/definitions/routes"
                },
                "description": "Model instance data",
                "name": "data",
                "required": false,
                "in": "body"
              }],
              "responses": {
                "200": {
                  "description": "Request was successful",
                  "schema": {
                    "$ref": "#/definitions/routes"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            }
          },
          "/routes/findOne": {
            "get": {
              "tags": ["routes"],
              "summary": "Find first instance of the model matched by filter from the data source.",
              "description": "",
              "operationId": "routes.findOne",
              "parameters": [{
                "description": "Filter defining fields, where, include, order, offset, and limit",
                "name": "filter",
                "format": "JSON",
                "type": "string",
                "required": false,
                "in": "query"
              }],
              "responses": {
                "200": {
                  "description": "Request was successful",
                  "schema": {
                    "$ref": "#/definitions/routes"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            }
          }
        },
        "definitions": {
          "Error": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "status": {
                "type": "integer"
              },
              "message": {
                "type": ["string", "array"]
              }
            }
          },
          "routes": {
            "properties": {
              "name": {
                "type": "string"
              },
              "difficulty": {
                "type": "string"
              },
              "height": {
                "type": "string"
              },
              "pitches": {
                "type": "string"
              },
              "style": {
                "type": "string"
              },
              "fa": {
                "type": "string"
              },
              "ffa": {
                "type": "string"
              },
              "ffs": {
                "type": "string"
              },
              "id": {
                "type": "number",
                "format": "double"
              }
            },
            "additionalProperties": false
          }
        },
        "schemes": ["http"],
        "tags": [{
          "name": "User"
        }, {
          "name": "routes"
        }],
        "securityDefinitions": {
          "apikeyHeader": {
            "type": "apiKey",
            "in": "header",
            "name": "client_id"
          },
          "apiSecretHeader": {
            "type": "apiKey",
            "in": "header",
            "name": "client_secret"
          },
          "basicAuthentication": {
            "type": "basic",
            "x-ibm-authentication-registry": "corporate-idp"
          },
          "basicAuthenticationSSL": {
            "type": "basic",
            "x-ibm-authentication-url": {
              "url": "https://httpbin.org/basic-auth/username1/password1",
              "tls-profile": "new-ssl-profile"
            }
          }
        },
        "security": [{
          "apikeyHeader": [],
          "apiSecretHeader": [],
          "basicAuthentication": []
        }],
        "consumes": ["application/xml", "text/xml", "application/x-www-form-urlencoded", "application/json"],
        "produces": ["application/xml", "application/javascript", "text/javascript", "text/xml", "application/json"],
        "x-ibm-configuration": {
          "phase": "identified",
          "testable": false,
          "enforced": true,
          "cors": {
            "enabled": false
          },
          "assembly": {
            "execute": [{
              "operation-switch": {
                "case": [{
                  "execute": [{
                    "invoke": {
                      "target-url": "https://maps.googleapis.com/maps/api/directions/json?origin=San%2Francisco&destination=Yosemite&key=AIzaSyBzInSKIVS-jnalRe1Zn6RgDMBWxqKm5iA"
                    }
                  }],
                  "operations": [{
                    "verb": "get",
                    "path": "/sf2yosemite"
                  }]
                }]
              }
            }]
          }
        }
      }
    }
  ]
  }
}, {
  "id": "564bc04fe4b0869c782ee4c3",
  "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/subscriptions/564bc04fe4b0869c782ee4c3",
  "organization": {
    "id": "564b48a9e4b0869c782edc24",
    "name": "apim",
    "title": "Climb On"
  },
  "catalog": {
    "id": "564b48aae4b0869c782edc2b",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b",
    "name": "sb",
    "title": "Sandbox",
    "sandbox": true,
    "default": false
  },
  "active": true,
  "application": {
    "id": "564b7d27e4b0869c782ee079",
    "title": "SilverApp",
    "enabled": false,
    "state": "ACTIVE",
    "description": "",
    "oauth-redirection-uri": "https://localhost",
    "app-credentials": [{
      "id": "564b7d27e4b0869c782ee07a",
      "client-id": "fca38c3d-dc17-4d1f-a143-1ca46aeda84b",
      "client-secret": "WjtZEITyJmxRVu6uzVdYOzcpkDjYHIr8nZZY/iCqiWk="
    }],
    "test-app": false
  },
  "developer-organization": {
    "id": "564b7c28e4b0869c782edfc1",
    "name": "co1",
    "title": "CO1"
  },
  "plan-registration": {
    "id": "apim:1.0.0:silver",
    "product": {
      "id": "564b7b44e4b0869c782ede0b",
      "state": "published",
      "visibility": {
        "view": {
          "enabled": true,
          "type": "public",
          "tags": [],
          "orgs": []
        },
        "subscribe": {
          "enabled": true,
          "type": "authenticated",
          "tags": [],
          "orgs": []
        }
      },
      "document": {
        "product": "1.0.0",
        "info": {
          "name": "apim",
          "version": "1.0.0",
          "title": "ClimbOn",
          "contact": {
            "name": "George O Jungle",
            "email": "george.o.jungle@apim.com",
            "url": "http://www.apim.com"
          },
          "license": {
            "name": "Free for all climbers",
            "url": "http://www.apim.com/user-agreement"
          },
          "termsOfService": "Thy shalt not weigh more than thy fridge."
        },
        "visibility": {
          "view": {
            "enabled": true,
            "type": "public",
            "tags": [],
            "orgs": []
          },
          "subscribe": {
            "enabled": true,
            "type": "custom",
            "tags": ["tag1", "tag2"],
            "orgs": ["Consumer-Org-1", "Consumer-Org-2"]
          }
        },
        "apis":
          {
          "ascents": {"name": "ascents:1.0.0"},
          "forecasts": {"name": "forecasts:1.0.0"},
          "routes": {"name": "routes:1.0.0"}
          },
        "plans": {
          "trial": {
            "title": "Trial Climb On",
            "description": "blah blah",
            "approval": false,
            "rate-limit": {
              "hard-limit": true,
              "value": "60/hour"
            },
            "apis":
              {
              "ascents": {}
              }
          },
          "silver": {
            "title": "Silver Climb On",
            "description": "blah blah",
            "approval": true,
            "rate-limit": {
              "hard-limit": false,
              "value": "100/min"
            },
            "apis":
              {
              "ascents": {},
              "forecasts": {}
              }
          },
          "gold": {
            "title": "Gold Climb On",
            "description": "blah blah",
            "approval": true,
            "rate-limit": {
              "hard-limit": false,
              "value": "1000/min"
            },
            "apis":
              {
              "ascents": {},
              "forecasts": {},
              "routes": {}
              }
          }
        }
      }
    },
    "plan": {
      "name": "silver",
      "title": "Silver Climb On"
    },
    "apis": [
      {
        "id": "564b7b44e4b0869c782eddd2",
        "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/564b7b44e4b0869c782eddd2",
        "state": "running",
        "organization": {
          "id": "564b48a9e4b0869c782edc24",
          "name": "apim",
          "title": "Climb On"
        },
        "catalog": {
          "id": "564b48aae4b0869c782edc2b",
          "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b",
          "name": "sb",
          "title": "Sandbox",
          "sandbox": true,
          "default": false
        },
        "document": {
          "swagger": "2.0",
          "info": {
            "title": "ascents",
            "version": "1.0.0",
            "description": "The /v1 set of Ascent APIs",
            "termsOfService": "The Terms of Service for the API are ...",
            "contact": {
              "name": "Joe API Developer",
              "url": "http://developer.acme.com/contacturl",
              "email": "joedeveloper@someemailservice.com"
            },
            "license": {
              "name": "License Name Goes Here...",
              "url": "http://developer.acme.com/licenseurl"
            },
            "x-ibm-name": "ascents"
          },
          "host": "localhost:3000",
          "basePath": "/v1",
          "paths": {
            "/ascents": {
              "get": {
                "tags": ["Ascent"],
                "summary": "List Ascent",
                "description": "List Ascent",
                "operationId": "list",
                "parameters": [{
                  "description": "What element to start the list at, default is 0",
                  "name": "offset",
                  "type": "string",
                  "required": false,
                  "in": "query"
                }, {
                  "description": "Total number of items to return, default is 10",
                  "name": "limit",
                  "type": "string",
                  "required": false,
                  "in": "query"
                }],
                "responses": {
                  "200": {
                    "description": "Success",
                    "schema": {
                      "$ref": "#/definitions/AscentList"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              },
              "post": {
                "tags": ["Ascent"],
                "summary": "Create a Ascent",
                "description": "Create a Ascent",
                "parameters": [{
                  "schema": {
                    "$ref": "#/definitions/AscentCreate"
                  },
                  "description": "Ascent to create",
                  "name": "payload",
                  "required": true,
                  "in": "body"
                }],
                "responses": {
                  "201": {
                    "description": "Successful create",
                    "schema": {
                      "$ref": "#/definitions/Ascent"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              }
            },
            "/ascents/{ascent}": {
              "get": {
                "tags": ["Ascent"],
                "summary": "Retrieve the Ascent",
                "description": "Retrieve the Ascent",
                "parameters": [{
                  "description": "Ascent id",
                  "name": "ascent",
                  "type": "string",
                  "required": true,
                  "in": "path"
                }, {
                  "description": "Return a subset of the fields",
                  "name": "fields",
                  "type": "string",
                  "required": false,
                  "in": "query"
                }],
                "responses": {
                  "200": {
                    "description": "Success",
                    "schema": {
                      "$ref": "#/definitions/Ascent"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              },
              "put": {
                "tags": ["Ascent"],
                "summary": "Update Ascent",
                "description": "Update Ascent",
                "parameters": [{
                  "description": "Ascent id",
                  "name": "ascent",
                  "type": "string",
                  "required": true,
                  "in": "path"
                }, {
                  "schema": {
                    "$ref": "#/definitions/AscentUpdate"
                  },
                  "description": "Ascent to update",
                  "name": "payload",
                  "required": true,
                  "in": "body"
                }],
                "responses": {
                  "200": {
                    "description": "Success",
                    "schema": {
                      "$ref": "#/definitions/Ascent"
                    }
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              },
              "delete": {
                "tags": ["Ascent"],
                "summary": "Delete the Ascent",
                "description": "Delete the Ascent",
                "operationId": "del",
                "parameters": [{
                  "description": "Ascent id",
                  "name": "ascent",
                  "type": "string",
                  "required": true,
                  "in": "path"
                }],
                "responses": {
                  "204": {
                    "description": "Successful delete"
                  },
                  "default": {
                    "description": "Unexpected error",
                    "schema": {
                      "$ref": "#/definitions/Error"
                    }
                  }
                },
                "deprecated": false
              }
            }
          },
          "definitions": {
            "Ascent": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "route": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                }
              }
            },
            "AscentCreate": {
              "type": "object",
              "additionalProperties": false,
              "required": ["route"],
              "properties": {
                "route": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                }
              }
            },
            "AscentUpdate": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "route": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                }
              }
            },
            "AscentList": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "total_results": {
                  "type": "integer"
                },
                "results": {
                  "type": "array",
                  "items": [{
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "route": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      }
                    }
                  }]
                }
              }
            },
            "Error": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "status": {
                  "type": "integer"
                },
                "message": {
                  "type": ["string", "array"]
                }
              }
            }
          },
          "schemes": ["http"],
          "securityDefinitions": {
            "oauthImplicit": {
              "type": "oauth2",
              "authorizationUrl": "http://swagger.io/api/oauth/dialog",
              "flow": "implicit",
              "scopes": {
                "scope1": "blah description",
                "scope2": "blah blah description"
              },
              "x-ibm-oauth2": {
                "authentication": ["basicAuth", "form"],
                "authenticationForm": {
                  "url": "https://somehost.com/authenticate",
                  "tlsClient": "Some SSL Profile Configuration Name"
                },
                "authenticationRegistry": "Some Registry Configuration Name",
                "authenticationUrl": {
                  "url": "https://somehost.com/authenticate",
                  "tlsClient": "Some SSL Profile Configuration Name"
                },
                "authorization": "form",
                "authorizationForm": {
                  "url": "https://somehost.com/authorization",
                  "tlsClient": "Some SSL Profile Configuration Name"
                },
                "refreshToken": false,
                "revocationUrl": {
                  "url": "https://somehost.com/revoke",
                  "tlsClient": "Some SSL Profile Configuration Name"
                }
              }
            }
          },
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "x-ibm-configuration": {
            "phase": "realized",
            "testable": true,
            "enforced": true,
            "cors": {
              "enabled": true
            }
          }
        }
      },
    {
      "id": "564b7b44e4b0869c782eddd5",
      "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/564b7b44e4b0869c782eddd5",
      "state": "running",
      "organization": {
        "id": "564b48a9e4b0869c782edc24",
        "name": "apim",
        "title": "Climb On"
      },
      "catalog": {
        "id": "564b48aae4b0869c782edc2b",
        "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b",
        "name": "sb",
        "title": "Sandbox",
        "sandbox": true,
        "default": false
      },
      "document": {
        "swagger": "2.0",
        "info": {
          "title": "forecasts",
          "version": "1.0.0",
          "description": "The /v1 set of Forecast APIs",
          "termsOfService": "The Terms of Service for the API are ...",
          "contact": {
            "name": "Joe API Developer",
            "url": "http://developer.acme.com/contacturl",
            "email": "joedeveloper@someemailservice.com"
          },
          "license": {
            "name": "License Name Goes Here...",
            "url": "http://developer.acme.com/licenseurl"
          },
          "x-ibm-name": "forecasts"
        },
        "host": "localhost:3000",
        "basePath": "/v1",
        "paths": {
          "/forecasts/{forecast}": {
            "get": {
              "tags": ["Forecast"],
              "summary": "Retrieve the Forecast",
              "description": "Retrieve the Forecast",
              "parameters": [{
                "description": "Forecast id",
                "name": "forecast",
                "type": "string",
                "required": true,
                "in": "path"
              }, {
                "description": "Return a subset of the fields",
                "name": "fields",
                "type": "string",
                "required": false,
                "in": "query"
              }],
              "responses": {
                "200": {
                  "description": "Success",
                  "schema": {
                    "$ref": "#/definitions/Forecast"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "put": {
              "tags": ["Forecast"],
              "summary": "Update Forecast",
              "description": "Update Forecast",
              "parameters": [{
                "description": "Forecast id",
                "name": "forecast",
                "type": "string",
                "required": true,
                "in": "path"
              }, {
                "schema": {
                  "$ref": "#/definitions/ForecastUpdate"
                },
                "description": "Forecast to update",
                "name": "payload",
                "required": true,
                "in": "body"
              }],
              "responses": {
                "200": {
                  "description": "Success",
                  "schema": {
                    "$ref": "#/definitions/Forecast"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "delete": {
              "tags": ["Forecast"],
              "summary": "Delete the Forecast",
              "description": "Delete the Forecast",
              "operationId": "del",
              "parameters": [{
                "description": "Forecast id",
                "name": "forecast",
                "type": "string",
                "required": true,
                "in": "path"
              }],
              "responses": {
                "204": {
                  "description": "Successful delete"
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            }
          },
          "/forecasts": {
            "get": {
              "tags": ["Forecast"],
              "summary": "List Forecast",
              "description": "List Forecast",
              "operationId": "list",
              "parameters": [{
                "description": "What element to start the list at, default is 0",
                "name": "offset",
                "type": "string",
                "required": false,
                "in": "query"
              }, {
                "description": "Total number of items to return, default is 10",
                "name": "limit",
                "type": "string",
                "required": false,
                "in": "query"
              }],
              "responses": {
                "200": {
                  "description": "Success",
                  "schema": {
                    "$ref": "#/definitions/ForecastList"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            },
            "post": {
              "tags": ["Forecast"],
              "summary": "Create a Forecast",
              "description": "Create a Forecast",
              "parameters": [{
                "schema": {
                  "$ref": "#/definitions/ForecastCreate"
                },
                "description": "Forecast to create",
                "name": "payload",
                "required": true,
                "in": "body"
              }],
              "responses": {
                "201": {
                  "description": "Successful create",
                  "schema": {
                    "$ref": "#/definitions/Forecast"
                  }
                },
                "default": {
                  "description": "Unexpected error",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              },
              "deprecated": false
            }
          }
        },
        "definitions": {
          "Forecast": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "conditions": {
                "type": "string"
              }
            }
          },
          "ForecastCreate": {
            "type": "object",
            "additionalProperties": false,
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string"
              },
              "conditions": {
                "type": "string"
              }
            }
          },
          "ForecastUpdate": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "conditions": {
                "type": "string"
              }
            }
          },
          "ForecastList": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "total_results": {
                "type": "integer"
              },
              "results": {
                "type": "array",
                "items": [{
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "conditions": {
                      "type": "string"
                    }
                  }
                }]
              }
            }
          },
          "Error": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "status": {
                "type": "integer"
              },
              "message": {
                "type": ["string", "array"]
              }
            }
          }
        },
        "schemes": ["http"],
        "securityDefinitions": {
          "apikeyHeader": {
            "type": "apiKey",
            "in": "header",
            "name": "client_id"
          },
          "apikeyQueryParameter": {
            "type": "apiKey",
            "in": "query",
            "name": "client_id"
          }
        },
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-ibm-configuration": {
          "phase": "realized",
          "testable": true,
          "enforced": true,
          "cors": {
            "enabled": true
          }
        }
      }
    }
  ]
  }
}]
