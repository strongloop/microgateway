[
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api000564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api000564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten02-api000.xml)",
        "x-ibm-name": "api000"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://127.0.0.1:7200/service/revocation",
            "tls-profile": "api-sslcli-all"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api01564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api01564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20-api0001.xml)",
        "x-ibm-name": "api01"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "paths": {
        "/oauth2/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth2/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth2/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth2/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth2/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api02564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api02564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20-api0011.xml)",
        "x-ibm-name": "api02"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test1",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth2/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth2/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth2/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test1": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 0
          },
          "revocation": {
            "url": null
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api050564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api050564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API103",
        "x-ibm-name": "api050",
        "description": "OAuth Protected API\n  provider = api000.yaml\n"
      },
      "host": "host.com",
      "basePath": "/",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/": "default root scope"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api102564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api102564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten02-api102.xml)",
        "x-ibm-name": "api102"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test102",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "public",
          "scopes": {
            "/test102": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api152564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api152564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API103",
        "x-ibm-name": "api152",
        "description": "OAuth Protected API\n  provider = api102.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test102",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test102": "/test102"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test102"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api200564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api200564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former policy/ten02/ten02-api200.xml policy/ten20/ten20-api2001.xml)",
        "x-ibm-name": "api200"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test200",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "token",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test200": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-registry": "ldap200"
          },
          "authorization": {
            "type": "default-form"
          },
          "access-token": {
            "ttl": 60
          },
          "refresh-token": {
            "count": 2048,
            "ttl": 6000
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api202564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api202564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api2021.xml)",
        "x-ibm-name": "api202"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test202",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "token",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "public",
          "scopes": {
            "/test202": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-registry": "ldap200"
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api203564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api203564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former policy/ten02/ten02-api200.xml policy/ten20/ten20-api2031.xml)",
        "x-ibm-name": "api203"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test203",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "token",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "public",
          "scopes": {
            "/test203": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-registry": "ldap203"
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api25564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api25564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20-api9001.xml)",
        "x-ibm-name": "api25"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test605",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth2/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth2/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth2/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test605": "Scope 605"
          },
          "grants": [
            "accessCode"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://127.0.0.1:7200/service/revocation"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api250564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api250564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API250",
        "x-ibm-name": "api250",
        "description": "OAuth Protected API\n  provider = api200.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test200",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test200": "/test200"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test200"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api252564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api252564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API252",
        "x-ibm-name": "api252",
        "description": "OAuth Protected API\n  provider = api202.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test202",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test202": "/test202"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test202"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api253564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api253564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API253",
        "x-ibm-name": "api253",
        "description": "OAuth Protected API\n  provider = api203.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test203",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test203": "/test203"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test203"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api32564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api32564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints",
        "x-ibm-name": "api32"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test620",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth2/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth2/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth2/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test620": "Scope 620"
          },
          "grants": [
            "accessCode"
          ],
          "identity-extraction": {
            "type": "redirect",
            "redirect-url": "https://172.16.183.131:7202/service/login/redirect?test-option=manual"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://127.0.0.1:9006//auth-url/test1"
            }
          },
          "authorization": {
            "type": "authenticated"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api34564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api34564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20-api9001.xml)",
        "x-ibm-name": "api34"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test900",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth2/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth2/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth2/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test900": "Scope 900"
          },
          "grants": [
            "password",
            "application"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-registry": "ldap-1"
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api35564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api35564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20-api9001.xml)",
        "x-ibm-name": "api35"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test901",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth2/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth2/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth2/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test901": "Scope 900"
          },
          "grants": [
            "accessCode",
            "password",
            "application"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api400564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api400564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former policy/ten02/ten02-api400.xml policy/ten20/ten20-api4001.xml)",
        "x-ibm-name": "api400"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test400-auth-url",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "token",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test400-auth-url": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://127.0.0.1:9006//auth-url/test1",
              "tls-profie": "api-sslcli-all"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api402564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api402564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api4021.xml)",
        "x-ibm-name": "api402"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test402-auth-url",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "token",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "public",
          "scopes": {
            "/test402-auth-url": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://127.0.0.1:9006//auth-url/test1",
              "tls-profie": "api-sslcli-all"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api403564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api403564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api4031.xml)",
        "x-ibm-name": "api403"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "header",
          "name": "client_id",
          "type": "apiKey"
        },
        "clientSecret": {
          "description": "application's client_secret",
          "in": "header",
          "name": "client_secret",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test403-resource-owner-password",
      "paths": {
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "password"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application client secret, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "Scope being requested",
                "type": "string",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test403-resource-owner-password": "Root Scope"
          },
          "grants": [
            "application",
            "password"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://127.0.0.1:9006//auth-url/test1",
              "tls-profile": "api-sslcli-all"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api404564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api404564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api4041.xml)",
        "x-ibm-name": "api404"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "clientSecret": {
          "description": "application's client_secret",
          "in": "header",
          "name": "client_secret",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test404-resource-owner-password",
      "paths": {
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "password"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "Scope being requested",
                "type": "string",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "public",
          "scopes": {
            "/test404-resource-owner-password": "Root Scope"
          },
          "grants": [
            "application",
            "password"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://127.0.0.1:9006//auth-url/test1",
              "tls-profile": "api-sslcli-all"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api405564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api405564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api4051.xml)",
        "x-ibm-name": "api405"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "header",
          "name": "client_id",
          "type": "apiKey"
        },
        "clientSecret": {
          "description": "application's client_secret",
          "in": "header",
          "name": "client_secret",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test405-client-cred",
      "paths": {
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "client_credentials"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "Scope being requested",
                "type": "string",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test405-client-cred": "Root Scope"
          },
          "grants": [
            "application"
          ],
          "identity-extraction": {
            "type": "default-form"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://127.0.0.1:9006//auth-url/test1",
              "tls-profile": "api-sslcli-all"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api406564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api406564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api4061.xml)",
        "x-ibm-name": "api406"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "header",
          "name": "client_id",
          "type": "apiKey"
        },
        "clientSecret": {
          "description": "application's client_secret",
          "in": "header",
          "name": "client_secret",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test406-client-cred",
      "paths": {
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "client_credentials"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "Scope being requested",
                "type": "string",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test406-client-cred": "Root Scope"
          },
          "grants": [
            "application"
          ],
          "identity-extraction": {
            "type": "default-form"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://sample.com",
              "tls-profile": "api-sslcli-all"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api450564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api450564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API450",
        "x-ibm-name": "api450",
        "description": "OAuth Protected API\n  provider = api400.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test400-auth-url",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test400-auth-url": "/test400-auth-url"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test400-auth-url"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api452564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api452564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API452",
        "x-ibm-name": "api452",
        "description": "OAuth Protected API\n  provider = api402.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test402-auth-url",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test402-auth-url": "/test402-auth-url"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test402-auth-url"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api453564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api453564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API453",
        "x-ibm-name": "api453",
        "description": "OAuth Protected API\n  provider = api403.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test403-resource-owner-password",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "password",
          "scopes": {
            "/test403-resource-owner-password": "default root scope"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test403-resource-owner-password"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api454564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api454564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API454",
        "x-ibm-name": "api454",
        "description": "OAuth Protected API\n  provider = api404.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test404-resource-owner-password",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "password",
          "scopes": {
            "/test404-resource-owner-password": "default root scope"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test404-resource-owner-password"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api455564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api455564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API455",
        "x-ibm-name": "api455",
        "description": "OAuth Protected API\n  provider = api405.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test405-client-cred",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test405-client-cred": "/test405-client-cred"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test405-client-cred"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api456564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api456564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API456",
        "x-ibm-name": "api456",
        "description": "OAuth Protected API\n  provider = api456.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test406-client-cred",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test406-client-cred": "/test406-client-cred"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test406-client-cred"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api500564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api500564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former policy/ten02/ten02-api500.xml policy/ten20/ten20-api5001.xml)",
        "x-ibm-name": "api500"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test500",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "token",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test500": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api501564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api501564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api5011.xml)",
        "x-ibm-name": "api501"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test501",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "token",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "public",
          "scopes": {
            "/test501": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api502564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api502564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api5021.xml)",
        "x-ibm-name": "api502"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "header",
          "name": "client_id",
          "type": "apiKey"
        },
        "clientSecret": {
          "description": "application's client_secret",
          "in": "header",
          "name": "client_secret",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test502",
      "paths": {
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "password",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application client secret, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "Scope being requested",
                "type": "string",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test502": "Root Scope"
          },
          "grants": [
            "password"
          ],
          "identity-extraction": {
            "type": "default-form"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api503564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api503564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api5031.xml)",
        "x-ibm-name": "api503"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "clientSecret": {
          "description": "application's client_secret",
          "in": "header",
          "name": "client_secret",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test503",
      "paths": {
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "password",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "Scope being requested",
                "type": "string",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "public",
          "scopes": {
            "/test503": "Root Scope"
          },
          "grants": [
            "password"
          ],
          "identity-extraction": {
            "type": "default-form"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api505564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api505564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api4051.xml)",
        "x-ibm-name": "api505"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "header",
          "name": "client_id",
          "type": "apiKey"
        },
        "clientSecret": {
          "description": "application's client_secret",
          "in": "header",
          "name": "client_secret",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test505-client-cred",
      "paths": {
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "client_credentials"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test505-client-cred": "Root Scope",
            "shortlife": "Short life",
            "scope2": "Scope 2",
            "scope3": "Scope 3"
          },
          "grants": [
            "application"
          ],
          "identity-extraction": {
            "type": "default-form"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://127.0.0.1:9006//auth-url/test1",
              "tls-profile": "api-sslcli-all"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api506564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api506564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api4051.xml)",
        "x-ibm-name": "api506"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "header",
          "name": "client_id",
          "type": "apiKey"
        },
        "clientSecret": {
          "description": "application's client_secret",
          "in": "header",
          "name": "client_secret",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test506-client-cred",
      "paths": {
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "client_credentials"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test506-client-cred": "Root Scope",
            "shortlife": "Short life",
            "scope2": "Scope 2",
            "scope3": "Scope 3"
          },
          "grants": [
            "application"
          ],
          "identity-extraction": {
            "type": "default-form"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://127.0.0.1:9006//auth-url/test1",
              "tls-profile": "api-sslcli-all"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api51564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api51564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API51",
        "x-ibm-name": "api51",
        "description": "OAuth Protected API\n  provider = api01.yaml\n  old tenant testcases = ten20_api0001.xml\n  No base path\n"
      },
      "host": "host.com",
      "paths": {
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/": "default root scope"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api52564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api52564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API52",
        "x-ibm-name": "api52",
        "description": "OAuth Protected API\n  provider = api01.yaml\n  old tenant testcases = ten20_api0011.xml\n"
      },
      "host": "host.com",
      "basePath": "/test1",
      "paths": {
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test1": "/test1"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test1"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api550564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api550564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API550",
        "x-ibm-name": "api550",
        "description": "OAuth Protected API\n  provider = api500.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test500",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test500": "/test500"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test500"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api551564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api551564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API551",
        "x-ibm-name": "api551",
        "description": "OAuth Protected API\n  provider = api501.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test501",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test501": "/test501"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test501"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api552564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api552564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API552",
        "x-ibm-name": "api552",
        "description": "OAuth Protected API\n  provider = api502.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test502",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "password",
          "scopes": {
            "/test502": "default root scope"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test502"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api553564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api553564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API553",
        "x-ibm-name": "api553",
        "description": "OAuth Protected API\n  provider = api503.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test503",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "password",
          "scopes": {
            "/test503": "default root scope"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test503"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api555564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api555564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API555",
        "x-ibm-name": "api555",
        "description": "OAuth Protected API\n  provider = api505.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test505-client-cred",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            },
            "security": [
              {
                "OAuthDef": [
                  "/test505-client-cred"
                ]
              }
            ]
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            },
            "security": [
              {
                "OAuthDef": [
                  "shortlife"
                ]
              }
            ]
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/": "default root scope"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test505-client-cred"
          ]
        },
        {
          "OAuthDef": [
            "shortlife"
          ]
        }
      ],
      "consumes": [
        "application/xml",
        "application/json"
      ],
      "produces": [
        "application/xml",
        "application/json"
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://httpbin.org/get?scope=$(oauth.scope)&reqpath=$(request.path)"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api556564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api556564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API556",
        "x-ibm-name": "api556",
        "description": "OAuth Protected API\n  provider = api506.yaml\n"
      },
      "host": "host.com",
      "basePath": "test506-client-cred",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            },
            "security": [
              {
                "OAuthDef": [
                  "shortlife",
                  "scope3"
                ]
              }
            ]
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            },
            "security": [
              {
                "OAuthDef": [
                  "/test506-client-cred",
                  "scope2"
                ]
              }
            ]
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/": "default root scope"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "shortlife",
            "scope3"
          ]
        },
        {
          "OAuthDef": [
            "/test506-client-cred",
            "scope2"
          ]
        }
      ],
      "consumes": [
        "application/xml",
        "application/json"
      ],
      "produces": [
        "application/xml",
        "application/json"
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://httpbin.org/get?reqpath=$(request.path)"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api600564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api600564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten02-api600.xml)",
        "x-ibm-name": "api600"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test600",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test600": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://127.0.0.1:7200/service/revocation",
            "tls-profile": "api-sslcli-all"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api601564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api601564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api6011.xml)",
        "x-ibm-name": "api601"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test600rev",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test600rev": "revocation Scope"
          },
          "grants": [
            "accessCode"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://127.0.0.1:7200/service/revocation/revokelasttoken",
            "tls-profile": "api-sslcli-all"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api602564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api602564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20-api6021)",
        "x-ibm-name": "api602"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test600ro-rev",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test600ro-rev": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://127.0.0.1:7200/service/revocation/revokeResourceOwner",
            "tls-profile": "api-sslcli-all"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api606564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api606564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten02-api606.xml)",
        "x-ibm-name": "api606"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test606",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "public",
          "scopes": {
            "/test606": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api609564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api609564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20-api6091.xml)",
        "x-ibm-name": "api609"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test609",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test609": "revocation Scope"
          },
          "grants": [
            "accessCode"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://fail:7200/service/revocation",
            "tls-profile": "api-sslcli-all"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api610564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api610564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20-api6101.xml)",
        "x-ibm-name": "api610"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test600allYesterday",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test600allYesterday": "revocation Scope"
          },
          "grants": [
            "accessCode"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://127.0.0.1:7200/service/revocation/allRevokedYesterday",
            "tls-profile": "api-sslcli-all"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api611564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api611564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20-api6111.xml)",
        "x-ibm-name": "api611"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test600allTomorrow",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test600allTomorrow": "revocation Scope"
          },
          "grants": [
            "accessCode"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://127.0.0.1:7200/service/revocation/allRevokedTomorrow",
            "tls-profile": "api-sslcli-all"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api612564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api612564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former policy/ten20/ten20-api6121.xml)",
        "x-ibm-name": "api612"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test600allTimezone",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test600allTimezone": "revocation Scope"
          },
          "grants": [
            "accessCode"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://127.0.0.1:7200/service/revocation/allRevokedNowOnDiffTimezone",
            "tls-profile": "api-sslcli-all"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api613564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api613564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api6131.xml)",
        "x-ibm-name": "api613"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test600all",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test600all": "revocation Scope"
          },
          "grants": [
            "accessCode"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://127.0.0.1:7200/service/revocation/allRevokedNoDate",
            "tls-profile": "api-sslcli-all"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api614564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api614564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20/ten20-api6141.xml)",
        "x-ibm-name": "api614"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test600roRevNow",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test600roRevNow": "revocation Scope"
          },
          "grants": [
            "accessCode"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://127.0.0.1:7200/service/revocation/roRevokeNow",
            "tls-profile": "api-sslcli-all"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api615564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api615564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20-api6151.xml)",
        "x-ibm-name": "api615"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test600roRevNowAllClients",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "/test600roRevNowAllClients": "revocation Scope"
          },
          "grants": [
            "accessCode"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 2048
          },
          "revocation": {
            "url": "https://127.0.0.1:7200/service/revocation/roRevokeNowAllClients",
            "tls-profile": "api-sslcli-all"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api621564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api621564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten20-api6211.xml)",
        "x-ibm-name": "api621"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test621",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "token",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "public",
          "scopes": {
            "/test621": "Root Scope"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "redirect",
            "redirect-url": "https://172.16.183.131:7202/service/login/redirect?test-option=manual"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://127.0.0.1:9006//auth-url/test1"
            }
          },
          "authorization": {
            "type": "authenticated"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api650564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api650564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API650",
        "x-ibm-name": "api650",
        "description": "OAuth Protected API\n  provider = api600.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test600",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit accessCode",
          "scopes": {
            "/test600": "/test600"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test600"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api651564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api651564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API650",
        "x-ibm-name": "api651",
        "description": "OAuth Protected API\n  provider = api601.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test600rev",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "accessCode",
          "scopes": {
            "/test600rev": "/test600rev"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test600rev"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api652564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api652564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API650",
        "x-ibm-name": "api652",
        "description": "OAuth Protected API\n  provider = api602.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test600ro-rev",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "accessCode",
          "scopes": {
            "/test600ro-rev": "/test600ro-rev"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test600ro-rev"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api656564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api656564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API606",
        "x-ibm-name": "api656",
        "description": "OAuth Protected API\n  provider = api606.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test606",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test606": "/test606"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test606"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api659564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api659564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API659",
        "x-ibm-name": "api659",
        "description": "OAuth Protected API\n  provider = api609.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test609",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test609": "default root scope"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test609"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api660564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api660564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API671",
        "x-ibm-name": "api660",
        "description": "OAuth Protected API\n  provider = api610.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test600allYesterday",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test600allYesterday": "/test600allYesterday"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test600allYesterday"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api661564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api661564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API661",
        "x-ibm-name": "api661",
        "description": "OAuth Protected API\n  provider = api611.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test600allTomorrow",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test600allTomorrow": "/test600allTomorrow"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test600allTomorrow"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api662564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api662564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API671",
        "x-ibm-name": "api662",
        "description": "OAuth Protected API\n  provider = api612.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test600allTimezone",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test600allTimezone": "/test600allTimezone"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test600allTimezone"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api663564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api663564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API663",
        "x-ibm-name": "api663",
        "description": "OAuth Protected API\n  provider = api613.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test600all",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test600all": "/test600all"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test600all"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api664564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api664564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API664",
        "x-ibm-name": "api664",
        "description": "OAuth Protected API\n  provider = api614.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test600roRevNow",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test600roRevNow": "/test600roRevNow"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test600roRevNow"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api665564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api665564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API665",
        "x-ibm-name": "api665",
        "description": "OAuth Protected API\n  provider = api615.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test600roRevNowAllClients",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test600roRevNowAllClients": "default root scope"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test600roRevNowAllClients"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api671564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api671564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API671",
        "x-ibm-name": "api671",
        "description": "OAuth Protected API\n  provider = api621.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test606",
      "paths": {
        "/foo": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test621": "/test621"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test621"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api700564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api700564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten02-api102.xml)",
        "x-ibm-name": "api700"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "clientIdHeader": {
          "in": "header",
          "type": "apiKey",
          "name": "X-IBM-Client-Id"
        },
        "clientSecretHeader": {
          "in": "header",
          "type": "apiKey",
          "name": "X-IBM-Client-Secret"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test700",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "OK"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        },
        "/oauth/issued": {
          "get": {
            "produces": [
              "application/json"
            ],
            "summary": "Returns list of permission granted to the owner",
            "description": "This endpoint allows the return of all the issued permission for a given authenticated owner per owner authenti\ndefined in the x-ibm-configuration section\n",
            "security": [
              {
                "clientIdHeader": [],
                "clientSecretHeader": []
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing issued information, etc.",
                "schema": {
                  "$ref": "#/definitions/issued_responses"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          },
          "delete": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Revoke an application/client permission by the authorized owner",
            "description": "Revoke an application/client permission by the authorized owner",
            "security": [
              {
                "clientIdHeader": [],
                "clientSecretHeader": []
              }
            ],
            "parameters": [
              {
                "name": "client-id",
                "in": "query",
                "description": "client_id or application id to be revoked",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Cool"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "scope1": "Root Scope",
            "scope2": "Testing",
            "/test700": "Testing"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "basic"
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 1024
          },
          "revocation": {
            "type": "gateway"
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        },
        "issued_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "clientId",
            "owner",
            "scope",
            "issuedAt",
            "expiredAt",
            "refreshTokenIssued"
          ],
          "properties": {
            "clientId": {
              "type": "string"
            },
            "clientName": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            },
            "issuedAt": {
              "type": "string"
            },
            "expiredAt": {
              "type": "string"
            },
            "refreshTokenIssued": {
              "type": "boolean"
            },
            "miscInfo": {
              "type": "string"
            }
          }
        },
        "issued_responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/issued_response"
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api710564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api710564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "OAuth 2.0 Endpoints (former ten02-api102.xml)",
        "x-ibm-name": "api710"
      },
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "clientID": {
          "description": "application's client_id",
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "clientIdHeader": {
          "in": "header",
          "type": "apiKey",
          "name": "X-IBM-Client-Id"
        },
        "clientSecretHeader": {
          "in": "header",
          "type": "apiKey",
          "name": "X-IBM-Client-Secret"
        }
      },
      "security": [
        {
          "clientID": []
        }
      ],
      "basePath": "/test710",
      "paths": {
        "/oauth/authorize": {
          "get": {
            "produces": [
              "text/html"
            ],
            "summary": "endpoint for Authorization Code and Implicit grants",
            "description": "description",
            "parameters": [
              {
                "name": "response_type",
                "in": "query",
                "description": "request an authorization code or or access token (implicit)",
                "required": true,
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ]
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Application client ID",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "query",
                "description": "Scope being requested",
                "type": "string",
                "required": true
              },
              {
                "name": "redirect_uri",
                "in": "query",
                "type": "string",
                "description": "URI where user is redirected to after authorization",
                "required": false
              },
              {
                "name": "state",
                "in": "query",
                "type": "string",
                "description": "This string will be echoed back to application when user is redirected",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "An HTML form for authentication or authorization of this request."
              },
              "302": {
                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
              }
            },
            "security": [
              {
                "clientID": []
              }
            ]
          },
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "text/html"
            ],
            "summary": "submit approval to authorization code or access token",
            "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
            "security": [
              {
                "clientID": []
              }
            ],
            "parameters": [
              {
                "name": "client_id",
                "in": "formData",
                "description": "application requesting the access code or token",
                "required": true,
                "type": "string"
              },
              {
                "name": "scope",
                "in": "formData",
                "description": "requested scope of this authorization",
                "required": true,
                "type": "string"
              },
              {
                "name": "resource-owner",
                "in": "formData",
                "description": "resource owners user name",
                "required": true,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "URI the application is requesting this code or token to be redirected to",
                "required": true,
                "type": "string"
              },
              {
                "name": "original-url",
                "in": "formData",
                "description": "URL of the original authorization request",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-state",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              },
              {
                "name": "dp-data",
                "in": "formData",
                "description": "state information provided in the authorization form",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "OK"
              }
            }
          }
        },
        "/oauth/token": {
          "post": {
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "produces": [
              "application/json"
            ],
            "summary": "Request Access Tokens",
            "description": "This endpoint allows requesting an access token following one of the flows below:\n- Authorization Code (exchange code for access token)\n- Client Credentials (2-legged, there isnt resource owner information)\n- Resource Owner Password Credentials (2-legged, client provides resource owner name and password)\n- Refresh Token (exchange refresh token for a new access code)\n\nThe table below indicates the required parameters for each specific grant_type options.\nEmpty cells indicate a parameter is ignored for that specific grant type.\n\nClient authentication:\n- Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post\n  their client_id and client_secret information as a formData parameter.\n- Public clients should send their client_id as formData parameter.\n\n| grant_type           | code       | client_credentials | password    | refresh_token |\n|----------------------|------------|--------------------|-------------|---------------|\n| client_id            | required*  | required*          | required*   | required*     |\n| client_secret        | required*  | required*          | required*   | required*     |\n| code                 | required   |                    |             |               |\n| redirect_uri         | required   |                    |             |               |\n| username             |            |                    | required    |               |\n| password             |            |                    | required    |               |\n| scope                |            | optional           | optional    |               |\n| refresh_token        |            |                    |             | required      |\n\nThe implicit grant requests, see /oauth/authorize.\n",
            "security": [],
            "parameters": [
              {
                "name": "grant_type",
                "in": "formData",
                "description": "Type of grant",
                "type": "string",
                "required": true,
                "enum": [
                  "authorization_code",
                  "password",
                  "client_credentials",
                  "refresh_token"
                ]
              },
              {
                "name": "client_id",
                "in": "formData",
                "description": "Application client ID, can be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "client_secret",
                "in": "formData",
                "description": "Application secret, must be provided in formData or using HTTP Basic Authentication",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "Authorization code provided by the /oauth/authorize endpoint",
                "required": false,
                "type": "string"
              },
              {
                "name": "redirect_uri",
                "in": "formData",
                "description": "required only if the redirect_uri parameter was included in the authorization request /oauth/authorize; their values MUST be identical.",
                "required": false,
                "type": "string"
              },
              {
                "name": "username",
                "in": "formData",
                "type": "string",
                "description": "Resource owner username",
                "required": false
              },
              {
                "name": "password",
                "in": "formData",
                "type": "string",
                "description": "Resource owner password",
                "required": false
              },
              {
                "name": "scope",
                "in": "formData",
                "type": "string",
                "description": "Scope being requested",
                "required": false
              },
              {
                "name": "refresh_token",
                "in": "formData",
                "type": "string",
                "description": "The refresh token that the client wants to exchange for a new access token (refresh_token grant_type)",
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "json document containing token, etc.",
                "schema": {
                  "$ref": "#/definitions/access_token_response"
                }
              },
              "400": {
                "description": "json document that may contain additional details about the failure"
              }
            }
          }
        }
      },
      "x-ibm-configuration": {
        "testable": true,
        "enforced": true,
        "phase": "realized",
        "oauth2": {
          "client-type": "confidential",
          "scopes": {
            "scope1": "Root Scope",
            "scope2": "Testing",
            "/test710": "Testing"
          },
          "grants": [
            "accessCode",
            "implicit"
          ],
          "identity-extraction": {
            "type": "custom-form",
            "custom-form": {
              "url": "https://127.0.0.1:8890/authen.html"
            }
          },
          "authentication": {
            "x-ibm-authentication-url": {
              "url": "http://localhost:7000/basic-auth"
            }
          },
          "authorization": {
            "type": "default-form"
          },
          "refresh-token": {
            "count": 1024
          }
        },
        "type": "oauth"
      },
      "definitions": {
        "access_token_response": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "token_type",
            "access_token",
            "expires_in"
          ],
          "properties": {
            "token_type": {
              "enum": [
                "bearer"
              ]
            },
            "access_token": {
              "type": "string"
            },
            "expires_in": {
              "type": "integer"
            },
            "scope": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api750564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api750564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API750",
        "x-ibm-name": "api750",
        "description": "OAuth Protected API\n  provider = api700.yaml\n"
      },
      "host": "host.com",
      "basePath": "/test700",
      "paths": {
        "/res1": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res2": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res4": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/": "default root scope"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "scope1"
          ]
        },
        {
          "OAuthDef": [
            "/test700"
          ]
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  },
  {
    "catalog": {
      "default": false,
      "id": "catalog007",
      "name": "sb",
      "sandbox": true,
      "title": "Sandbox",
      "url": "https://example.com/v1/catalogs/catalog007"
    },
    "id": "api85564b7b3ae4b0869c782eddae",
    "organization": {
      "id": "564b48a9e4b0869c782edc24",
      "name": "apim",
      "title": "Climb On"
    },
    "state": "running",
    "url": "https://example.com/v1/catalogs/564b48aae4b0869c782edc2b/apis/api85564b7b3ae4b0869c782eddae",
    "document": {
      "swagger": "2.0",
      "info": {
        "version": "1.0.0",
        "title": "API85",
        "x-ibm-name": "api85",
        "description": "OAuth Protected API\n"
      },
      "host": "host.com",
      "basePath": "/test901",
      "paths": {
        "/res1": {
          "post": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        },
        "/res3": {
          "get": {
            "responses": {
              "200": {
                "description": "200 OK"
              }
            }
          }
        }
      },
      "definitions": {},
      "schemes": [
        "https"
      ],
      "securityDefinitions": {
        "ClientID": {
          "in": "query",
          "name": "client_id",
          "type": "apiKey"
        },
        "OAuthDef": {
          "type": "oauth2",
          "authorizationUrl": "",
          "flow": "implicit",
          "scopes": {
            "/test901": "/test901"
          }
        }
      },
      "security": [
        {
          "OAuthDef": [
            "/test901"
          ],
          "ClientID": []
        }
      ],
      "x-ibm-configuration": {
        "enforced": true,
        "phase": "realized",
        "testable": true,
        "cors": {
          "enabled": true
        },
        "assembly": {
          "execute": [
            {
              "invoke": {
                "title": "invoke",
                "target-url": "http://127.0.0.1:9006/"
              }
            }
          ]
        }
      }
    }
  }
]
